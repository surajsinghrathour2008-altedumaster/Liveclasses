import React, { useState, useEffect } from 'react';
import { Notification } from '@/types';
import { getNotifications } from '@/services/api';
import { useUI } from '@/context/UIContext';
import { Button } from '@/components/ui/Button';
import { Plus, Bell, Trash2 } from 'lucide-react';
import { Skeleton } from '@/components/ui/Skeleton';

const NotificationsPage: React.FC = () => {
  const [notifications, setNotifications] = useState<Notification[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const { openModal, triggerRefresh } = useUI();

  useEffect(() => {
    const fetchNotifications = async () => {
      setIsLoading(true);
      setError(null);
      try {
        const data = await getNotifications();
        setNotifications(data);
      } catch (err: any) {
        setError(err.message || 'Failed to load notifications.');
      } finally {
        setIsLoading(false);
      }
    };
    fetchNotifications();
  }, [triggerRefresh]);

  return (
    <div>
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-3xl font-bold text-white">Manage Notifications</h2>
        <Button onClick={() => openModal('createNotification')}>
          <Plus size={20} className="mr-2" />
          Create Notification
        </Button>
      </div>
      
      <div className="bg-gray-800 rounded-xl border border-gray-700">
        {isLoading ? (
          <div className="p-6 space-y-4">
            {Array.from({ length: 3 }).map((_, i) => <Skeleton key={i} className="h-16 w-full" />)}
          </div>
        ) : error ? (
          <div className="text-center py-10">
            <h3 className="text-lg font-semibold text-red-400">{error}</h3>
          </div>
        ) : notifications.length === 0 ? (
          <div className="text-center py-20">
            <Bell size={48} className="mx-auto text-gray-600 mb-4" />
            <h3 className="text-xl font-semibold text-white">No Notifications Found</h3>
            <p className="text-gray-400 mt-2">Create a notification to announce something to your users.</p>
          </div>
        ) : (
          <ul className="divide-y divide-gray-700">
            {notifications.map(notification => (
              <li key={notification.id} className="p-4 flex items-center justify-between">
                <div>
                  <h3 className="font-semibold text-white">{notification.title}</h3>
                  <p className="text-gray-400 text-sm">{notification.message}</p>
                  <p className="text-xs text-gray-500 mt-1">{new Date(notification.created_at).toLocaleString()}</p>
                </div>
                <Button 
                  variant="secondary" 
                  size="icon" 
                  className="bg-red-900/50 text-red-400 hover:bg-red-900/80"
                  onClick={() => openModal('confirmDelete', { id: notification.id, type: 'notification', name: notification.title })}
                >
                  <Trash2 size={16} />
                </Button>
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  );
};

export default NotificationsPage;
