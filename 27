import React from 'react';
import { Bell, Video } from 'lucide-react';
import { Link } from 'react-router-dom';
import { useUI } from '@/context/UIContext';

// Props are now required, ensuring the tabs are always configured correctly.
interface UserHeaderProps {
  activeTab: 'live' | 'upcoming' | 'completed';
  onTabChange: (tab: 'live' | 'upcoming' | 'completed') => void;
}

const UserHeader: React.FC<UserHeaderProps> = ({ activeTab, onTabChange }) => {
  const { toggleNotificationPanel } = useUI();
  const navItems = [
    { id: 'live', label: 'Live' },
    { id: 'upcoming', label: 'Upcoming' },
    { id: 'completed', label: 'Completed' },
  ];

  return (
    <header className="bg-gray-800/50 backdrop-blur-sm sticky top-0 z-10">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-20">
          {/* Logo */}
          <Link to="/" className="flex items-center gap-2">
            <div className="bg-gradient-to-r from-accent-start to-accent-end p-2 rounded-lg">
              <Video className="text-white" />
            </div>
            <h1 className="text-2xl font-bold text-white">Codify</h1>
          </Link>

          {/* Navigation Tabs - now always visible on desktop */}
          <nav className="hidden md:flex items-center gap-2 bg-gray-800 p-1 rounded-lg">
            {navItems.map((item) => (
              <button
                key={item.id}
                onClick={() => onTabChange(item.id as 'live' | 'upcoming' | 'completed')}
                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${
                  activeTab === item.id
                    ? 'bg-gray-700 text-white'
                    : 'text-gray-400 hover:bg-gray-700/50 hover:text-white'
                }`}
              >
                {item.label}
              </button>
            ))}
          </nav>

          {/* Notification Bell */}
          <div className="flex items-center">
            <button onClick={toggleNotificationPanel} className="p-2 rounded-full text-gray-400 hover:bg-gray-700 hover:text-white transition-colors relative">
              <Bell size={22} />
              <span className="absolute top-1.5 right-1.5 flex h-2.5 w-2.5">
                <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-accent-end opacity-75"></span>
                <span className="relative inline-flex rounded-full h-2.5 w-2.5 bg-gradient-to-r from-accent-start to-accent-end"></span>
              </span>
            </button>
          </div>
        </div>
      </div>
    </header>
  );
};

export default UserHeader;
