import React from 'react';
import { RecurringClass } from '@/types';

interface RecurringClassCardProps {
  session: RecurringClass;
  onContextMenu: (e: React.MouseEvent) => void;
  onDragStart: (e: React.DragEvent) => void;
}

const RecurringClassCard: React.FC<RecurringClassCardProps> = ({ session, onContextMenu, onDragStart }) => {
  const formatTime = (time: string) => {
    const [hour, minute] = time.split(':');
    const date = new Date();
    date.setHours(parseInt(hour, 10), parseInt(minute, 10));
    return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });
  };

  return (
    <div 
      className="bg-gray-800 rounded-xl p-3 flex flex-col gap-2 border border-gray-700/50 cursor-grab active:cursor-grabbing"
      onContextMenu={onContextMenu}
      draggable
      onDragStart={onDragStart}
    >
      <img src={session.thumbnail_url || 'https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/400x225/1C1C22/E0E0E6?text=No+Image'} alt={session.title} className="w-full h-24 object-cover rounded-md pointer-events-none" />
      <div className="pointer-events-none">
        <h3 className="font-semibold text-white truncate text-sm">{session.title}</h3>
        <p className="text-xs text-gray-400">{session.tutors.name}</p>
      </div>
      <div className="text-xs text-gray-400 flex-grow pointer-events-none">{`${formatTime(session.start_time)} - ${formatTime(session.end_time)}`}</div>
    </div>
  );
};

export default RecurringClassCard;
