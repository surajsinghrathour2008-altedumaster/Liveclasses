import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { Batch } from '@/types';
import { getBatches } from '@/services/api';
import { useUI } from '@/context/UIContext';
import { Button } from '@/components/ui/Button';
import { Plus, Box, Pencil, Trash2 } from 'lucide-react';
import { Skeleton } from '@/components/ui/Skeleton';
import { cn } from '@/lib/utils';

const BatchesPage: React.FC = () => {
  const [batches, setBatches] = useState<Batch[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const { openModal, triggerRefresh } = useUI();

  useEffect(() => {
    const fetchBatches = async () => {
      setIsLoading(true);
      setError(null);
      try {
        const data = await getBatches();
        setBatches(data);
      } catch (err: any) {
        setError(err.message || 'Failed to load batches.');
      } finally {
        setIsLoading(false);
      }
    };
    fetchBatches();
  }, [triggerRefresh]);

  return (
    <div>
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-3xl font-bold text-white">Batches</h2>
        <Button onClick={() => openModal('createBatch')}>
          <Plus size={20} className="mr-2" />
          Create Batch
        </Button>
      </div>
      
      {isLoading ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {Array.from({ length: 3 }).map((_, i) => <Skeleton key={i} className="h-40 w-full" />)}
        </div>
      ) : error ? (
        <div className="text-center py-10 bg-red-900/20 rounded-xl">
          <h3 className="text-lg font-semibold text-red-400">{error}</h3>
        </div>
      ) : batches.length === 0 ? (
        <div className="text-center py-20 border-2 border-dashed border-gray-700 rounded-xl">
          <Box size={48} className="mx-auto text-gray-600 mb-4" />
          <h3 className="text-xl font-semibold text-white">No Batches Found</h3>
          <p className="text-gray-400 mt-2">Get started by creating your first batch.</p>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {batches.map(batch => (
            <div key={batch.id} className="bg-gray-800 rounded-xl border border-gray-700 flex flex-col group transition-all hover:border-accent-start/50">
              <Link to={`/admin/batches/${batch.id}`} className="p-6 flex-grow">
                <h3 className="text-xl font-bold text-white truncate group-hover:text-accent-start transition-colors">{batch.name}</h3>
                <p className="text-gray-400 mt-2 h-10 overflow-hidden">{batch.description || 'No description provided.'}</p>
              </Link>
              <div className="flex items-center justify-between mt-auto p-4 border-t border-gray-700">
                <p className="text-xs text-gray-500">Created: {new Date(batch.created_at).toLocaleDateString()}</p>
                <div className="flex gap-2">
                    <Button variant="secondary" size="icon" onClick={() => openModal('editBatch', batch)}>
                        <Pencil size={16} />
                    </Button>
                    <Button variant="secondary" size="icon" className="bg-red-900/50 text-red-400 hover:bg-red-900/80" onClick={() => openModal('confirmDelete', { id: batch.id, type: 'batch', name: batch.name })}>
                        <Trash2 size={16} />
                    </Button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default BatchesPage;
