import React, { useState, useEffect } from 'react';
import { Tutor } from '@/types';
import { getTutors } from '@/services/api';
import { useUI } from '@/context/UIContext';
import { Button } from '@/components/ui/Button';
import { Plus, Users, Pencil, Trash2 } from 'lucide-react';
import { Skeleton } from '@/components/ui/Skeleton';

const TutorsPage: React.FC = () => {
  const [tutors, setTutors] = useState<Tutor[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const { openModal, triggerRefresh } = useUI();

  useEffect(() => {
    const fetchTutors = async () => {
      setIsLoading(true);
      setError(null);
      try {
        const data = await getTutors();
        setTutors(data);
      } catch (err: any) {
        setError(err.message || 'Failed to load tutors.');
      } finally {
        setIsLoading(false);
      }
    };
    fetchTutors();
  }, [triggerRefresh]);

  return (
    <div>
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-3xl font-bold text-white">Tutors</h2>
        <Button onClick={() => openModal('createTutor')}>
          <Plus size={20} className="mr-2" />
          Add Tutor
        </Button>
      </div>

      {isLoading ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {Array.from({ length: 4 }).map((_, i) => <Skeleton key={i} className="h-48 w-full" />)}
        </div>
      ) : error ? (
        <div className="text-center py-10 bg-red-900/20 rounded-xl">
          <h3 className="text-lg font-semibold text-red-400">{error}</h3>
        </div>
      ) : tutors.length === 0 ? (
        <div className="text-center py-20 border-2 border-dashed border-gray-700 rounded-xl">
          <Users size={48} className="mx-auto text-gray-600 mb-4" />
          <h3 className="text-xl font-semibold text-white">No Tutors Found</h3>
          <p className="text-gray-400 mt-2">Get started by adding your first tutor.</p>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {tutors.map(tutor => (
            <div key={tutor.id} className="bg-gray-800 rounded-xl border border-gray-700 flex flex-col items-center p-6 text-center">
              <div className="w-24 h-24 rounded-full mb-4 bg-gray-700 flex items-center justify-center">
                <Users size={48} className="text-gray-500" />
              </div>
              <h3 className="text-lg font-semibold text-white truncate w-full">{tutor.name}</h3>
              <p className="text-xs text-gray-500 mt-2 flex-grow w-full break-all">
                {tutor.video_url}
              </p>
              <div className="flex gap-2 mt-4">
                <Button variant="secondary" size="icon" onClick={() => openModal('editTutor', tutor)}>
                  <Pencil size={16} />
                </Button>
                <Button variant="secondary" size="icon" className="bg-red-900/50 text-red-400 hover:bg-red-900/80" onClick={() => openModal('confirmDelete', { id: tutor.id, type: 'tutor', name: tutor.name })}>
                  <Trash2 size={16} />
                </Button>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default TutorsPage;
