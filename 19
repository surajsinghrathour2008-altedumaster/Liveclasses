import * as React from "react";
import { Slot } from "@radix-ui/react-slot";
import { cn } from "@/lib/utils";

export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  asChild?: boolean;
  variant?: "primary" | "secondary";
  size?: "default" | "sm" | "icon";
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant = "primary", size = "default", asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button";

    const baseClasses = "inline-flex items-center justify-center rounded-md text-sm font-semibold transition-all focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 disabled:opacity-50 disabled:pointer-events-none";
    
    const variantClasses = {
      primary: "bg-gradient-to-r from-accent-start to-accent-end text-white hover:opacity-90 focus:ring-accent-start",
      secondary: "bg-gray-700 text-gray-200 hover:bg-gray-600 focus:ring-gray-600",
    };

    const sizeClasses = {
      default: "px-4 py-2",
      sm: "px-3 py-1.5 text-xs",
      icon: "h-9 w-9",
    };

    return (
      <Comp
        className={cn(baseClasses, variantClasses[variant], sizeClasses[size], className)}
        ref={ref}
        {...props}
      />
    );
  }
);
Button.displayName = "Button";

export { Button };
